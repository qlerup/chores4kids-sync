name: Attach Integration ZIP to Release

on:
  release:
    types: [published, prereleased]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to attach assets to (e.g. v1.0.3)'
        required: false

permissions:
  contents: write

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    env:
      INTEGRATION: chores4kids
      HACS_ZIP: chores4kids.zip
    steps:
      - uses: actions/checkout@v4

      - name: Determine tag
        id: tag
        run: |
          if [ -n "${{ github.event.release.tag_name }}" ]; then
            echo "tag=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ inputs.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Verify required files
        run: |
          test -f hacs.json
          test -f custom_components/${{ env.INTEGRATION }}/manifest.json
          test -f custom_components/${{ env.INTEGRATION }}/__init__.py

      - name: Ensure hacs.json matches (zip_release & filename)
        run: |
          jq -e '.zip_release == true and .filename == env.HACS_ZIP' hacs.json > /dev/null || {
            echo "::error ::hacs.json must have zip_release=true and filename=${HACS_ZIP}"
            exit 1
          }

      - name: Extract version from tag
        id: ver
        run: |
          TAG="${{ steps.tag.outputs.tag }}"
          echo "version=${TAG#v}" >> "$GITHUB_OUTPUT"

      - name: Bump manifest.json version
        run: |
          jq --arg v "${{ steps.ver.outputs.version }}" '.version=$v' \
            custom_components/${{ env.INTEGRATION }}/manifest.json > m.tmp
          mv m.tmp custom_components/${{ env.INTEGRATION }}/manifest.json

      # (optional) commit manifest bump
      # - uses: EndBug/add-and-commit@v9
      #   with:
      #     add: custom_components/${{ env.INTEGRATION }}/manifest.json
      #     message: "chore: bump manifest to ${{ steps.ver.outputs.version }}"

      - name: Build ZIPs (HACS + versioned) with FLAT root
        run: |
          set -e
          mkdir -p dist
          pushd custom_components/${{ env.INTEGRATION }} >/dev/null
          # HACS zip (flat root)
          zip -r "../../dist/${{ env.HACS_ZIP }}" . \
            -x "**/__pycache__/*" "**/*.pyc" ".DS_Store" ".git/*"
          # Versioned zip (flat root)
          zip -r "../../dist/${{ env.INTEGRATION }}-${{ steps.ver.outputs.version }}.zip" . \
            -x "**/__pycache__/*" "**/*.pyc" ".DS_Store" ".git/*"
          popd >/dev/null

      - name: Sanity check ZIP layout (must be flat; manifest at root)
        run: |
          # must NOT contain 'custom_components/' at top level
          if unzip -l dist/${{ env.HACS_ZIP }} | awk '{print $4}' | grep -q "^custom_components/"; then
            echo "::error ::ZIP must NOT contain 'custom_components/' at root; pack the files directly."
            exit 1
          fi
          # must contain manifest.json at root
          unzip -l dist/${{ env.HACS_ZIP }} | awk '{print $4}' | grep -qx "manifest.json" || {
            echo "::error ::ZIP must contain manifest.json at root"
            exit 1
          }
          # should contain __init__.py at root
          unzip -l dist/${{ env.HACS_ZIP }} | awk '{print $4}' | grep -qx "__init__.py" || {
            echo "::error ::ZIP should contain __init__.py at root"
            exit 1
          }

      - name: Upload ZIP assets
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          files: |
            dist/${{ env.HACS_ZIP }}
            dist/${{ env.INTEGRATION }}-${{ steps.ver.outputs.version }}.zip
